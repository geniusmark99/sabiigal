"use client";
import { motion, sync, useCycle } from "framer-motion";
import { useEffect, useRef } from "react";
import { Nav } from "./Nav";
import { MenuItem } from "./MenuItem";

function useDimensions(ref) 
{
  const dimensions = useRef({ width: 0, height: 0 });

  useEffect(() => {
    dimensions.current.width = ref.current.offsetWidth;
    dimensions.current.height = ref.current.offsetHeight;
  }, []);

  return dimensions.current;
};


const Path = props => (
    <motion.path
      fill="white"
      strokeWidth="3"
      stroke="hsl(0, 0%, 18%)"
      strokeLinecap="round"
      {...props}
    />
  );

const sidebar = {
    open: (height = 500) => ({
      clipPath: `circle(${height * 2 + 200}px at 40px 40px)`,
      backgroundColor:"white",
      transition: {
        type: "spring",
        stiffness: 20,
        restDelta: 2
      }
    }),
    closed: {
      clipPath: "circle(0px at 0px 0px)",
      backgroundColor:"white",
      transition: {
        delay: 0.5,
        type: "spring",
        stiffness: 400,
        damping: 40
      }
    }
  };

  const pathVariants = {
    hidden: {
      opacity: 0,
      pathLength: 0
    },
    visible: {
      opacity: 1,
      pathLength: 1,
      transition: {
        duration: 2,
        ease: "easeInOut"
      }
    }
  };

  const variants = {
    open: {
      transition: { staggerChildren: 0.07, delayChildren: 0.2 }
    },
    closed: {
      transition: { staggerChildren: 0.05, staggerDirection: -1 }
    }
  };

  const itemIds = [0, 1, 2, 3, 4];

export default function HeaderWidget(){``
    const [isOpen, toggleOpen] = useCycle(false, true);
    const containerRef = useRef(null);
    const { height } = useDimensions(containerRef);



return(
    <>

<header className="flex justify-between items-center w-full h-14 p-2 lg:px-10 lg:gap-x-4">
<div>
<svg className="size-14 lg:size-16 transform transition-all lg:rotate-90" viewBox="0 0 90 113" fill="none" xmlns="http://www.w3.org/2000/svg">
<path className={ isOpen ? "fill-black transition-all lg:fill-white" : "fill-white transition-all" } d="M78.77 80.9242L73.3735 80.9452L73.3199 67.164C73.4956 67.1516 73.689 67.145 73.8999 67.1442C74.1108 67.1317 74.4213 67.1246 74.8315 67.123C79.2611 67.1058 82.7051 68.2642 85.1634 70.5984C87.61 72.921 88.8415 76.2033 88.858 80.4455C88.8662 82.5314 88.5628 84.39 87.9481 86.0213C87.3216 87.6409 86.3663 89.0919 85.0822 90.3743C83.8565 91.5978 82.4071 92.5527 80.734 93.2389C79.0491 93.9134 77.2867 94.2543 75.4469 94.2614C73.525 94.2689 71.7601 93.9477 70.1521 93.2977C68.5323 92.6477 67.0754 91.6749 65.7813 90.3791C64.5224 89.0949 63.5674 87.6221 62.9164 85.9605C62.2654 84.2873 61.9361 82.4839 61.9286 80.5503C61.9187 78.0308 62.4081 75.8023 63.3967 73.8648C64.3852 71.9157 65.8612 70.2751 67.8248 68.9433L70.7664 75.0139C69.7732 75.7443 69.0381 76.5675 68.5612 77.4834C68.0725 78.3877 67.8304 79.4023 67.8348 80.5273C67.8429 82.6249 68.5525 84.2745 69.9634 85.4761C71.3626 86.6777 73.2751 87.2737 75.7009 87.2643C78.1501 87.2548 80.0755 86.6438 81.477 85.4313C82.8785 84.2188 83.5752 82.5637 83.5671 80.466C83.5601 78.6848 83.1208 77.2041 82.249 76.0239C81.3654 74.832 80.1967 74.1393 78.7428 73.9457L78.77 80.9242ZM78.5324 56.0167L78.5052 49.0383L70.0252 51.6904C69.7678 51.7735 69.3522 51.8864 68.7785 52.0293C68.2048 52.1721 67.4673 52.3566 66.5658 52.5828C67.1992 52.7327 67.8033 52.8827 68.3781 53.0328C68.9529 53.1712 69.5042 53.3155 70.0322 53.4658L78.5324 56.0167ZM88.1858 65.8054L62.4171 57.0287L62.3828 48.2397L88.0824 39.245L88.1096 46.2235L83.5092 47.5422L83.548 57.5089L88.1586 58.8269L88.1858 65.8054ZM88.0728 36.7665L62.3386 36.8667L62.3113 29.8531L82.0338 29.7763L81.9998 21.0576L88.0115 21.0342L88.0728 36.7665Z" />
<path className={ isOpen ? "fill-black transition-all lg:fill-white" : "fill-white transition-all" } d="M0 0H33C44.0457 0 53 8.95431 53 20V113H20C8.95431 113 0 104.046 0 93V0Z"  fill="white"/>
<path className={ isOpen ? "fill-white transition-all lg:fill-black" : "fill-black transition-all" } d="M41.6328 101.416L39.8996 97.7118C41.1742 97.3553 42.1483 96.7069 42.8217 95.7668C43.4821 94.8267 43.8095 93.6275 43.8038 92.1692C43.7984 90.789 43.4101 89.6967 42.6387 88.8925C41.8673 88.0751 40.8371 87.669 39.548 87.674C37.8683 87.6805 36.3764 89.0796 35.0721 91.8712C34.8783 92.2625 34.7363 92.5626 34.6459 92.7713C33.1218 95.9283 31.7432 98.0365 30.5104 99.096C29.2644 100.143 27.743 100.669 25.9462 100.676C23.6155 100.685 21.7244 99.9049 20.273 98.3351C18.8215 96.7522 18.0907 94.6782 18.0807 92.1131C18.0725 90.0037 18.4758 88.2378 19.2906 86.8154C20.0924 85.393 21.2539 84.4054 22.7752 83.8526L24.6643 87.478C23.7681 88.0545 23.113 88.6885 22.699 89.3802C22.285 90.0589 22.0797 90.841 22.0832 91.7264C22.088 92.9764 22.4174 93.9712 23.0714 94.7109C23.7252 95.4375 24.599 95.7987 25.6928 95.7944C27.4115 95.7877 29.0068 94.1669 30.4786 90.932C30.5948 90.6841 30.6852 90.4885 30.7497 90.345C32.0408 87.5144 33.3093 85.5694 34.5552 84.5098C35.788 83.4503 37.3355 82.917 39.1974 82.9097C41.9057 82.8992 44.064 83.7436 45.6722 85.4431C47.2673 87.1427 48.0706 89.4442 48.0819 92.3479C48.0914 94.7827 47.5393 96.7836 46.4256 98.3504C45.3118 99.9043 43.7142 100.926 41.6328 101.416ZM36.0096 71.8088L35.9786 63.8401L29.4666 66.7951C29.0506 66.966 28.5761 67.1436 28.0429 67.328C27.4968 67.5124 26.892 67.6971 26.2287 67.882C26.8543 68.0358 27.4409 68.2028 27.9884 68.3829C28.5229 68.5501 29.0184 68.724 29.4749 68.9045L36.0096 71.8088ZM47.19 58.9136L39.8394 62.1844L39.8835 73.5124L47.2597 76.8041L47.2787 81.6868L17.4984 67.955L47.1709 54.0113L47.19 58.9136ZM30.6194 46.8296L30.6125 45.0522C30.6039 42.8387 30.2983 41.2774 29.6958 40.3683C29.0802 39.4462 28.0563 38.9879 26.624 38.9935C25.0615 38.9996 23.9694 39.427 23.3477 40.2758C22.713 41.1246 22.4002 42.7274 22.4094 45.0842L22.4163 46.8615L30.6194 46.8296ZM43.256 46.7804L43.2498 45.1788C43.2434 43.5512 43.1736 42.334 43.0403 41.5272C42.9069 40.7205 42.6766 40.0833 42.3492 39.6159C41.9694 39.0444 41.4599 38.6037 40.8206 38.2937C40.1814 37.9837 39.4777 37.8302 38.7094 37.8331C37.798 37.8367 37.0045 38.0286 36.3288 38.4088C35.6532 38.7891 35.128 39.3315 34.7531 40.0361C34.5335 40.4796 34.3727 40.9881 34.2708 41.5614C34.1688 42.1217 34.1196 42.8706 34.1233 43.8081L34.1288 45.2143L34.135 46.8159L43.256 46.7804ZM47.1604 51.316L18.5669 51.4273L18.5388 44.2203C18.5308 42.163 18.6356 40.6457 18.8531 39.6683C19.0706 38.6778 19.432 37.8366 19.9371 37.1445C20.5847 36.2566 21.4349 35.5696 22.4877 35.0838C23.5404 34.5849 24.7048 34.333 25.9808 34.328C27.5043 34.3221 28.7817 34.6686 29.813 35.3678C30.8314 36.0669 31.545 37.0863 31.9539 38.4259C32.2078 36.7582 32.9644 35.4466 34.2237 34.4912C35.47 33.5228 37.0501 33.0349 38.9642 33.0274C40.123 33.0229 41.224 33.2205 42.2673 33.62C43.3105 34.0196 44.1981 34.5891 44.9302 35.3284C45.7275 36.1066 46.2912 37.0745 46.6212 38.232C46.9512 39.3896 47.1216 41.3356 47.1322 44.0699L47.1604 51.316ZM20.5503 29.0952C19.8341 29.098 19.2146 28.84 18.6918 28.3212C18.1689 27.7893 17.906 27.1588 17.9032 26.4297C17.9002 25.6745 18.1517 25.0485 18.6576 24.5517C19.1504 24.042 19.7744 23.7857 20.5296 23.7827C21.2848 23.7798 21.9238 24.0312 22.4466 24.537C22.9564 25.0428 23.2127 25.6668 23.2156 26.409C23.2185 27.1382 22.9605 27.7707 22.4418 28.3066C21.9099 28.8295 21.2794 29.0923 20.5503 29.0952ZM47.0713 28.4255L28.5558 28.4976L28.5393 24.2594L47.0548 24.1873L47.0713 28.4255ZM20.5094 18.5874C19.7932 18.5902 19.1737 18.3322 18.6509 17.8134C18.128 17.2816 17.8651 16.6511 17.8623 15.9219C17.8593 15.1667 18.1108 14.5408 18.6167 14.044C19.1095 13.5343 19.7335 13.2779 20.4887 13.275C21.2439 13.272 21.8829 13.5235 22.4057 14.0292C22.9155 14.5351 23.1718 15.1591 23.1747 15.9013C23.1776 16.6304 22.9196 17.2629 22.4008 17.7988C21.869 18.3217 21.2385 18.5846 20.5094 18.5874ZM47.0304 17.9178L28.5149 17.9899L28.4984 13.7516L47.0139 13.6795L47.0304 17.9178Z"/>
<path className={ isOpen ? "fill-white transition-all lg:fill-black" : "fill-black transition-all" } d="M6.75123 15.2396C6.73351 15.3386 6.73564 15.4401 6.75749 15.5382C6.77934 15.6363 6.82047 15.7291 6.8785 15.8112C6.93653 15.8933 7.01029 15.9631 7.0955 16.0164C7.18072 16.0697 7.27568 16.1056 7.37488 16.1219C7.47407 16.1382 7.57552 16.1347 7.67333 16.1114C7.77114 16.0882 7.86335 16.0458 7.94461 15.9866C8.02588 15.9274 8.09456 15.8526 8.14669 15.7667C8.19881 15.6807 8.23334 15.5853 8.24825 15.4858L8.6897 12.8017L13.434 19.4138L7.0773 23.9748C6.91389 24.0921 6.80376 24.2695 6.77111 24.468C6.73847 24.6664 6.78599 24.8698 6.90322 25.0332L12.7403 33.1683C12.7975 33.2515 12.8706 33.3224 12.9556 33.3769C13.0405 33.4315 13.1354 33.4685 13.2348 33.4859C13.3342 33.5033 13.4361 33.5007 13.5345 33.4782C13.6329 33.4557 13.7258 33.4139 13.8078 33.355C13.8898 33.2962 13.9593 33.2216 14.0121 33.1356C14.0649 33.0496 14.1 32.9539 14.1153 32.8541C14.1307 32.7544 14.126 32.6526 14.1015 32.5547C14.0771 32.4568 14.0333 32.3647 13.9728 32.2839L8.57791 24.7651L14.9346 20.2041C15.098 20.0868 15.2081 19.9094 15.2408 19.7109C15.2734 19.5124 15.2259 19.3091 15.1086 19.1457L9.92221 11.9174L12.6063 12.3588C12.7053 12.3766 12.8068 12.3744 12.9049 12.3526C13.003 12.3307 13.0958 12.2896 13.1779 12.2316C13.26 12.1735 13.3297 12.0998 13.3831 12.0146C13.4364 11.9294 13.4723 11.8344 13.4886 11.7352C13.5049 11.636 13.5013 11.5345 13.4781 11.4367C13.4549 11.3389 13.4124 11.2467 13.3533 11.1655C13.2941 11.0842 13.2193 11.0155 13.1334 10.9634C13.0474 10.9113 12.9519 10.8767 12.8525 10.8618L8.36148 10.1232C8.16297 10.0906 7.95962 10.1381 7.79617 10.2554C7.63271 10.3727 7.52254 10.5501 7.48987 10.7486L6.75123 15.2396Z"/>


</svg>

</div>

<ul className="hidden lg:flex justify-between lg:w-[500px]">
<li className="desktop-link">
About me
</li>

<li className="desktop-link">
My blog
</li>

<li className="desktop-link">
Services
</li>

<li className="desktop-link">
Testimonies
</li>


<li className="desktop-link">
How I work
</li>
</ul>


<div className="flex gap-x-5">
<button className={`${isOpen ? "hover:text-white border-black hover:border-white text-black hover:bg-black lg:text-white lg:hover:bg-white lg:hover:text-black lg:border-white lg:hover:border-black" : "text-white hover:bg-white hover:text-black border-whitehover:border-black"} 
transition-all px-6 py-2 bg-transparent rounded-xl  border
 `}


>
   
   
    Get in Touch
</button>
{/* HERE */}

<button onClick={()=> toggleOpen()} 
className={`${isOpen ? "bg-black" : "bg-white"} relative z-[1000] p-0 m-0 rounded-full flex justify-center items-center size-10 md:size-12  lg:hidden transition-all`}

>
<svg className={`size-6 ${isOpen ? "fill-white" : "fill-black"}`} viewBox="0 0 28 31" fill="none" xmlns="http://www.w3.org/2000/svg">

<motion.path className={`${isOpen ? "hidden" : "block"}`}  variants={pathVariants} d="M16.9337 0.248606C16.8332 0.25189 16.7344 0.275112 16.6429 0.31692C16.5515 0.358729 16.4693 0.41829 16.4011 0.492143C16.3329 0.565997 16.2801 0.652669 16.2457 0.747124C16.2112 0.841578 16.1959 0.94193 16.2006 1.04235C16.2054 1.14277 16.23 1.24125 16.2731 1.33207C16.3162 1.42289 16.3769 1.50424 16.4517 1.5714C16.5265 1.63855 16.6139 1.69016 16.7088 1.72324C16.8038 1.75632 16.9043 1.77019 17.0047 1.76407L19.7219 1.63675L14.2431 7.6542L8.45803 2.38702C8.30926 2.25163 8.11282 2.18086 7.91189 2.19028C7.71096 2.19969 7.522 2.28852 7.38655 2.43723L0.64576 9.84078C0.576311 9.91401 0.522171 10.0004 0.486512 10.0948C0.450853 10.1892 0.43439 10.2898 0.438089 10.3906C0.441788 10.4915 0.465573 10.5906 0.508052 10.6821C0.550531 10.7737 0.61085 10.8558 0.685476 10.9238C0.760102 10.9917 0.847536 11.0441 0.942656 11.0778C1.03778 11.1116 1.13867 11.126 1.23943 11.1202C1.34019 11.1145 1.43879 11.0887 1.52946 11.0444C1.62012 11 1.70103 10.938 1.76745 10.8621L7.9976 4.01935L13.7827 9.28653C13.9314 9.42192 14.1279 9.49268 14.3288 9.48327C14.5297 9.47385 14.7187 9.38503 14.8541 9.23632L20.8435 2.65803L20.9709 5.37521C20.9741 5.47568 20.9974 5.5745 21.0392 5.66592C21.081 5.75735 21.1405 5.83955 21.2144 5.90775C21.2883 5.97595 21.3749 6.0288 21.4694 6.06322C21.5638 6.09763 21.6642 6.11293 21.7646 6.10822C21.865 6.10352 21.9635 6.0789 22.0543 6.03581C22.1451 5.99271 22.2265 5.93199 22.2937 5.85718C22.3608 5.78237 22.4124 5.69496 22.4455 5.60003C22.4786 5.5051 22.4925 5.40454 22.4863 5.3042L22.2733 0.757802C22.2639 0.556846 22.175 0.367866 22.0262 0.232426C21.8775 0.0969868 21.681 0.0261785 21.4801 0.0355746L16.9337 0.248606Z"/>
<motion.path className={`${isOpen ? "block" : "hidden"}`} d="M6.83567 12.6642C6.93516 12.6498 7.0308 12.6157 7.11703 12.5641C7.20325 12.5124 7.27835 12.4441 7.33795 12.3631C7.39755 12.2822 7.44046 12.1902 7.4642 12.0925C7.48794 11.9948 7.49202 11.8934 7.47622 11.7941C7.46042 11.6948 7.42504 11.5997 7.37215 11.5142C7.31925 11.4287 7.24989 11.3546 7.1681 11.2961C7.08631 11.2377 6.99372 11.1961 6.89571 11.1737C6.7977 11.1513 6.69622 11.1487 6.59717 11.1659L3.91083 11.5935L8.68911 5.00605L15.0222 9.59979C15.185 9.71786 15.3881 9.76643 15.5867 9.73481C15.7854 9.70319 15.9633 9.59397 16.0815 9.43117L21.9604 1.32631C22.0213 1.24583 22.0656 1.15402 22.0906 1.05623C22.1155 0.958447 22.1207 0.856661 22.1059 0.756836C22.091 0.657011 22.0564 0.561153 22.0041 0.474874C21.9517 0.388596 21.8827 0.313633 21.801 0.254374C21.7193 0.195116 21.6266 0.152752 21.5283 0.129767C21.43 0.106782 21.3282 0.103637 21.2286 0.120515C21.1291 0.137392 21.034 0.173955 20.9488 0.22806C20.8636 0.282164 20.7901 0.352724 20.7325 0.435607L15.2989 7.9265L8.96584 3.33276C8.80299 3.21468 8.59992 3.16612 8.40127 3.19774C8.20262 3.22936 8.02466 3.33858 7.90652 3.50138L2.68289 10.7028L2.25528 8.01647C2.24089 7.91697 2.20686 7.82134 2.15518 7.73511C2.1035 7.64888 2.03519 7.57379 1.95424 7.51419C1.87328 7.45458 1.78129 7.41167 1.6836 7.38793C1.58592 7.36419 1.48449 7.36011 1.38521 7.37591C1.28593 7.39171 1.19078 7.42709 1.10529 7.47999C1.0198 7.53288 0.945682 7.60224 0.887233 7.68403C0.828783 7.76582 0.787173 7.85841 0.764819 7.95642C0.742465 8.05444 0.739814 8.15591 0.757019 8.25496L1.47249 12.7498C1.50414 12.9484 1.6134 13.1264 1.77625 13.2445C1.93909 13.3626 2.14219 13.4112 2.34087 13.3796L6.83567 12.6642Z"/>

<rect y="16" width="4" height="15" rx="2"/>
<rect x="12" y="11" width="4" height="20" rx="2"/>
<rect x="24" y="7" width="4" height="24" rx="2"/>
</svg>
  </button>
</div>

</header>

<motion.nav
initial={false}
animate={isOpen ? "open" : "closed"}
custom={height}
ref={containerRef}
className="lg:hidden mobile-nav-sidebar"
>
<motion.div className="background" variants={sidebar} />
<motion.ul variants={variants} 
className="menu-list-ul"
>
    {itemIds.map(i => (
      <MenuItem i={i} key={i} />
    ))}
  </motion.ul>
    </motion.nav>

    </>
);


} 